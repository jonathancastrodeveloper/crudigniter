"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[565],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=a,h=m["".concat(i,".").concat(d)]||m[d]||c[d]||o;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=m;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:a,s[1]=l;for(var p=2;p<o;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2274:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return i},metadata:function(){return p},toc:function(){return u},default:function(){return m}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),s=["components"],l={sidebar_position:4},i=void 0,p={unversionedId:"tricks",id:"tricks",isDocsHomePage:!1,title:"tricks",description:"here the some usage with this framework, what we can do with this \u26a1",source:"@site/docs/tricks.md",sourceDirName:".",slug:"/tricks",permalink:"/crudigniter/docs/tricks",editUrl:"https://github.com/rohit-chouhan/crudigniter/docs/tricks.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"delete",permalink:"/crudigniter/docs/methods/delete"},next:{title:"about",permalink:"/crudigniter/docs/about"}},u=[{value:"Auto HTML Table",id:"auto-html-table",children:[]},{value:"CRUD with Python",id:"crud-with-python",children:[]}],c={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"here the some usage with this framework, what we can do with this \u26a1"),(0,o.kt)("h2",{id:"auto-html-table"},"Auto HTML Table"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Sample Code"),"Here the code you can generate html table with `GET`, its will show the all records automatically as your requirent. Here we are using `DataTables.net`. Change `http://example.com/users` which your API. and also pass the columns name below of it.",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<!DOCTYPE html>\n  <html>\n  <head>\n    <title>Table with Crudigniter</title>\n    <link href="bootstrap.css" rel="stylesheet">\n    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">\n    <link href="https://cdn.datatables.net/1.11.1/css/jquery.dataTables.min.css" rel="stylesheet">\n    <script src="https://code.jquery.com/jquery-3.5.1.js"><\/script>\n    <meta name="viewport" content="initial-scale=1, maximum-scale=1, user-scalable=no">\n  </head>\n  <body>\n  <div class="p-5">\n  <table id="mytable" class="display" style="width:100%">\n        <thead>\n            <tr>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Email</th>\n                <th>Action</th>\n            </tr>\n        </thead>\n    </table>\n  </div>\n  </body>\n<script>\n$(document).ready(function() {\n    $.extend( true, $.fn.dataTable.defaults, {\n        "ordering": false\n    });\n    $(\'#mytable\').DataTable( {\n        "ajax": {\n            "url": "http://example.com/users",\n            "dataSrc": ""\n        },\n        "columns": [\n            { data: "id" },\n            { data: "name" },\n            { data: "email" },\n            {\n              "mData": "",\n              "mRender": function (data, type, row) {\n                  return "<a href=\'/edit=" + row.id + "\'>EDIT</a>";\n              }\n            }\n        ]\n    } );\n} );\n<\/script>\n<script src="https://cdn.datatables.net/1.11.1/js/jquery.dataTables.min.js"><\/script>\n<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"><\/script>\n<script src="https://cdn.datatables.net/1.11.1/js/dataTables.bootstrap5.min.js"><\/script>\n</html>\n'))),(0,o.kt)("h2",{id:"crud-with-python"},"CRUD with Python"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Post Data"),(0,o.kt)("p",null,"If ",(0,o.kt)("inlineCode",{parentName:"p"},"securiy_config=1"),", use bearer token always"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},'api.post(url,json={}, headers = {"Authorization": "Bearer YOUR_KEY"})\n')),(0,o.kt)("p",null,"For Json Body"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import requests as api\n\napi_url = 'http://example.com/users'\nresponse = api.post(url=api_url, json={\n    'name':'Tony Stark',\n    'email':'tony@ironman.com'\n})\n")),(0,o.kt)("p",null,"For Form"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import requests as api\n\napi_url = 'http://example.com/users?form=true'\nresponse = api.post(url=api_url, data={\n    'name':'Tony Stark',\n    'email':'tony@ironman.com'\n})\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Read Data"),(0,o.kt)("p",null,"Read all methods will apply on ",(0,o.kt)("inlineCode",{parentName:"p"},"params")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import requests as api\n\n#for all data\napi_url = 'http://example.com/users'\nresponse = api.get(url=api_url)\n\n#for where name=rohit\napi_url = 'http://example.com/users'\nresponse = api.get(url=api_url, params={'name':'Rohit'})\n\nprint(response.json())\n\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Update Data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import requests as api\n\napi_url = 'http://example.com/users?name=Tony Stark'\nresponse = api.put(url=api_url, json={\n  'name':'Mr. Tony Stark'\n})\n"))),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Delete Data"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"import requests as api\n\napi_url = 'http://example.com/users'\nresponse = api.delete(url=api_url, json={\n  'name':'Mr. Tony Stark'\n})\n"))),(0,o.kt)("p",null,"more coming soon.. \ud83e\udd73"))}m.isMDXComponent=!0}}]);